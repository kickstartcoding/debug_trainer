{"version":3,"sources":["ports/print.js","ports/printAndExitFailure.js","ports/printAndExitSuccess.js","logging.js","ports/readFile.js","../tests_end_to_end/testHelpers.js","savedData.js","ports/writeFile.js","main.js"],"names":["program","ports","print","subscribe","message","console","log","printAndExitFailure","error","process","exit","printAndExitSuccess","loggingIsOn","argv","includes","devLog","messages","require","readFile","filepath","fs","err","contents","receiveFileContents","send","testFileName","dataFileName","runBreakCommand","runCommand","runHintCommand","runResetCommand","command","toString","createTestFileWithContent","content","writeFileSync","readTestFile","readFileSync","clearSaveFile","existsSync","unlinkSync","dataFilePath","TestHelpers","os","homedir","load","save","saveDataContents","closeSync","openSync","JSON","stringify","writeFile","fileData","path","SavedData","dataToSave","run","data","Elm","Main","init","flags","randomNumber1","getRandomInt","randomNumber2","workingDirectory","cwd","versionMessage","portFunctions","forEach","portSetupFunction","max","Math","floor","random"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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","file":"debug_trainer.js","sourceRoot":"../js","sourcesContent":["export default function (program) {\n  program.ports.print.subscribe(message => {\n    console.log(message)\n  });\n}","export default function (program) {\n  program.ports.printAndExitFailure.subscribe(message => {\n    console.error(message);\n    process.exit(1);\n  });\n}","export default function (program) {\n  program.ports.printAndExitSuccess.subscribe(message => {\n    console.log(message);\n    process.exit(0);\n  });\n}","const loggingIsOn = process.argv.includes('--log') || process.argv.includes('-l')\n\nexport function devLog(...messages) {\n  if (loggingIsOn) {\n    messages[0] = `[dev info]: ${messages[0]}`\n    console.log(...messages)\n  }\n}","import fs from 'fs'\nconst { devLog } = require('../logging.js')\n\nexport default function (program) {\n  program.ports.readFile.subscribe(filepath => {\n    devLog(`Reading contents of ${filepath}...`);\n    fs.readFile(filepath, 'utf8', function (err, contents) {\n      if (err) {\n        console.error(err)\n        process.exit(1);\n      }\n\n      program.ports.receiveFileContents.send(contents)\n    });\n\n  });\n}","import fs from 'fs'\nimport { execSync } from 'child_process'\n\nexport const testFileName = \"testfile.txt\"\nexport const dataFileName = \"debug_trainer_test_save_file.json\"\n\nexport function runBreakCommand() {\n  return runCommand(`break ${testFileName}`)\n}\n\nexport function runHintCommand() {\n  return runCommand(`hint ${testFileName}`)\n}\n\nexport function runResetCommand() {\n  return runCommand(`reset ${testFileName}`)\n}\n\nfunction runCommand(command) {\n  return execSync(`node ./bin/debug_trainer ${command} --test`).toString()\n}\n\nexport function createTestFileWithContent(content) {\n  fs.writeFileSync(testFileName, content, function (err) {\n    if (err) {\n      console.error(err)\n      process.exit(1)\n    }\n  })\n}\n\nexport function readTestFile() {\n  return fs.readFileSync(testFileName, 'utf8')\n}\n\nexport function clearSaveFile() {\n  if (fs.existsSync(dataFileName)) {\n    fs.unlinkSync(dataFileName)\n  }\n}","import fs from 'fs'\nimport os from 'os'\nimport { devLog } from './logging.js'\nimport * as TestHelpers from '../tests_end_to_end/testHelpers.js'\n\nexport const dataFilePath = process.argv.includes('--test') ?\n  TestHelpers.dataFileName : `${os.homedir()}/.debug_trainer.json`\n\nexport function load(program) {\n  devLog(`Loading data from ${dataFilePath}...`);\n  if (fs.existsSync(dataFilePath)) {\n    return fs.readFileSync(dataFilePath, 'utf8');\n  } else {\n    return null\n  }\n}\n\nexport function save(saveDataContents) {\n  devLog(`Saving data to ${dataFilePath}...`);\n  if (!fs.existsSync(dataFilePath)) {\n    fs.closeSync(fs.openSync(dataFilePath, 'w'))\n  }\n  const contents = JSON.stringify(saveDataContents, null, \"  \")\n  fs.writeFile(dataFilePath, contents, function (err) {\n    // console.log('contents:', contents)\n\n    if (err) {\n      console.error(err)\n      process.exit(1);\n    }\n    devLog('Data successfully saved!');\n\n    process.exit(0);\n  });\n}\n","import fs from 'fs'\nimport * as SavedData from '../savedData.js'\nimport { devLog } from '../logging.js'\n\nexport default function (program) {\n  program.ports.writeFile.subscribe(fileData => {\n    devLog(`Writing new contents of ${fileData.path}...`);\n    fs.writeFile(fileData.path, fileData.contents, function (err) {\n      if (err) {\n        console.error(err)\n        process.exit(1);\n      }\n\n      devLog('New file contents written!');\n      SavedData.save(fileData.dataToSave)\n\n      // console.log('Good luck debugging!');\n      // process.exit(0);\n    });\n  });\n}\n","import { Elm } from '../elm/Main.elm'\nimport print from './ports/print.js'\nimport printAndExitFailure from './ports/printAndExitFailure.js'\nimport printAndExitSuccess from './ports/printAndExitSuccess.js'\nimport readFile from './ports/readFile.js'\nimport writeFile from './ports/writeFile.js'\nimport * as SavedData from './savedData.js'\nimport { devLog } from './logging.js'\n\nexport function run() {\n  const data = SavedData.load()\n  devLog('process.argv:', process.argv)\n  devLog('data:', data)\n\n  const program = Elm.Main.init({\n    flags: {\n      argv: process.argv,\n      randomNumber1: getRandomInt(1_000_000),\n      randomNumber2: getRandomInt(1_000_000),\n      dataFilePath: SavedData.dataFilePath,\n      workingDirectory: process.cwd(),\n      data: data,\n      versionMessage: \"3.0.2\"\n    }\n  })\n\n  const portFunctions = [\n    print,\n    printAndExitFailure,\n    printAndExitSuccess,\n    readFile,\n    writeFile\n  ]\n\n  portFunctions.forEach(function (portSetupFunction) {\n    portSetupFunction(program)\n  })\n}\n\nfunction getRandomInt(max) {\n  return Math.floor(Math.random() * Math.floor(max))\n}"]}
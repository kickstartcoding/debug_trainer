{"version":3,"sources":["ports/print.js","ports/printAndExitFailure.js","ports/printAndExitSuccess.js","logging.js","ports/readFile.js","savedData.js","ports/writeFile.js","main.js"],"names":["program","ports","print","subscribe","message","console","log","printAndExitFailure","error","process","exit","printAndExitSuccess","loggingIsOn","argv","includes","devLog","messages","require","readFile","filepath","fs","err","contents","receiveFileContents","send","dataFilePath","os","homedir","load","existsSync","readFileSync","save","saveDataContents","closeSync","openSync","JSON","stringify","writeFile","fileData","path","SavedData","dataToSave","run","data","Elm","Main","init","flags","randomNumber1","getRandomInt","randomNumber2","workingDirectory","cwd","versionMessage","portFunctions","forEach","portSetupFunction","max","Math","floor","random"],"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","file":"debug_trainer.js","sourceRoot":"../js","sourcesContent":["export default function (program) {\n  program.ports.print.subscribe(message => {\n    console.log(message)\n  });\n}","export default function (program) {\n  program.ports.printAndExitFailure.subscribe(message => {\n    console.error(message);\n    process.exit(1);\n  });\n}","export default function (program) {\n  program.ports.printAndExitSuccess.subscribe(message => {\n    console.log(message);\n    process.exit(0);\n  });\n}","const loggingIsOn = process.argv.includes('--log') || process.argv.includes('-l')\n\nexport function devLog(...messages) {\n  if (loggingIsOn) {\n    messages[0] = `[dev info]: ${messages[0]}`\n    console.log(...messages)\n  }\n}","import fs from 'fs'\nconst { devLog } = require('../logging.js')\n\nexport default function (program) {\n  program.ports.readFile.subscribe(filepath => {\n    devLog(`Reading contents of ${filepath}...`);\n    fs.readFile(filepath, 'utf8', function (err, contents) {\n      if (err) {\n        console.error(err)\n        process.exit(1);\n      }\n\n      program.ports.receiveFileContents.send(contents)\n    });\n\n  });\n}","import fs from 'fs'\nimport os from 'os'\nimport { devLog } from './logging.js'\n\nexport const dataFilePath = `${os.homedir()}/.debug_trainer.json`\n\nexport function load(program) {\n  devLog(`Loading data from ${dataFilePath}...`);\n  if (fs.existsSync(dataFilePath)) {\n    return fs.readFileSync(dataFilePath, 'utf8');\n  } else {\n    return null\n  }\n}\n\nexport function save(saveDataContents) {\n  devLog(`Saving data to ${dataFilePath}...`);\n  if (!fs.existsSync(dataFilePath)) {\n    fs.closeSync(fs.openSync(dataFilePath, 'w'))\n  }\n  const contents = JSON.stringify(saveDataContents, null, \"  \")\n  fs.writeFile(dataFilePath, contents, function (err) {\n    // console.log('contents:', contents)\n\n    if (err) {\n      console.error(err)\n      process.exit(1);\n    }\n    devLog('Data successfully saved!');\n\n    process.exit(0);\n  });\n}\n","import fs from 'fs'\nimport * as SavedData from '../savedData.js'\nimport { devLog } from '../logging.js'\n\nexport default function (program) {\n  program.ports.writeFile.subscribe(fileData => {\n    devLog(`Writing new contents of ${fileData.path}...`);\n    fs.writeFile(fileData.path, fileData.contents, function (err) {\n      if (err) {\n        console.error(err)\n        process.exit(1);\n      }\n\n      devLog('New file contents written!');\n      SavedData.save(fileData.dataToSave)\n\n      // console.log('Good luck debugging!');\n      // process.exit(0);\n    });\n  });\n}\n","import { Elm } from '../elm/Main.elm'\nimport print from './ports/print.js'\nimport printAndExitFailure from './ports/printAndExitFailure.js'\nimport printAndExitSuccess from './ports/printAndExitSuccess.js'\nimport readFile from './ports/readFile.js'\nimport writeFile from './ports/writeFile.js'\nimport * as SavedData from './savedData.js'\nimport { devLog } from './logging.js'\n\nrun()\n\nfunction run() {\n  const data = SavedData.load()\n  devLog('data:', data)\n\n  const program = Elm.Main.init({\n    flags: {\n      argv: process.argv,\n      randomNumber1: getRandomInt(1_000_000),\n      randomNumber2: getRandomInt(1_000_000),\n      dataFilePath: SavedData.dataFilePath,\n      workingDirectory: process.cwd(),\n      data: data,\n      versionMessage: \"3.0.1\"\n    }\n  })\n\n  const portFunctions = [\n    print,\n    printAndExitFailure,\n    printAndExitSuccess,\n    readFile,\n    writeFile\n  ]\n\n  portFunctions.forEach(function (portSetupFunction) {\n    portSetupFunction(program)\n  })\n}\n\nfunction getRandomInt(max) {\n  return Math.floor(Math.random() * Math.floor(max))\n}"]}
{"version":3,"sources":["main.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;sBAAA;;AACA,IAAA,UAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AACA,IAAA,OAAA,GAAA,eAAA,CAAA,OAAA,CAAA,eAAA,CAAA,CAAA;;AACA,IAAA,qBAAA,GAAA,eAAA,CAAA,OAAA,CAAA,6BAAA,CAAA,CAAA;;AACA,IAAA,qBAAA,GAAA,eAAA,CAAA,OAAA,CAAA,6BAAA,CAAA,CAAA;;AACA,IAAA,UAAA,GAAA,eAAA,CAAA,OAAA,CAAA,kBAAA,CAAA,CAAA;;AACA,IAAA,WAAA,GAAA,eAAA,CAAA,OAAA,CAAA,mBAAA,CAAA,CAAA;;AAEA,IAAA,SAAA,GAAA,YAAA,CAAA,OAAA,CAAA,aAAA,CAAA,CAAA;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,SAAA,CAAA;;AAEA,SAAgB,GAAhB,GAAmB;AACjB,MAAM,IAAI,GAAW,SAAS,CAAC,IAAV,EAArB;AACA,EAAA,OAAA,CAAA,MAAA,CAAM,KAAN,CAAM,KAAA,CAAN,EAAM,cAAA,CAAA,CAAC,eAAD,CAAA,EAAqB,OAAO,CAAC,IAA7B,CAAN;AACA,EAAA,OAAA,CAAA,MAAA,CAAO,OAAP,EAAgB,IAAhB;AAEA,MAAM,OAAO,GAAG,UAAA,CAAA,GAAA,CAAI,IAAJ,CAAS,IAAT,CAAc;AAC5B,IAAA,KAAK,EAAE;AACL,MAAA,IAAI,EAAE,OAAO,CAAC,IADT;AAEL,MAAA,aAAa,EAAE,aAAa,CAAC,OAAD,EAAY,EAAZ,CAFvB;AAGL,MAAA,YAAY,EAAE,SAAS,CAAC,YAHnB;AAIL,MAAA,gBAAgB,EAAE,OAAO,CAAC,GAAR,EAJb;AAKL,MAAA,IAAI,EAAE,IALD;AAML,MAAA,cAAc,EAAE;AANX;AADqB,GAAd,CAAhB;AAWA,MAAM,aAAa,GAA2B,CAC5C,OAAA,CAAA,OAD4C,EAE5C,qBAAA,CAAA,OAF4C,EAG5C,qBAAA,CAAA,OAH4C,EAI5C;AACA,EAAA,UAAA,CAAA,OAL4C,EAM5C,WAAA,CAAA,OAN4C,CAA9C;AASA,EAAA,aAAa,CAAC,OAAd,CAAsB,UAAU,iBAAV,EAA2B;AAC/C,IAAA,iBAAiB,CAAC,OAAD,CAAjB;AACD,GAFD;AAGD;;AA5BD,OAAA,CAAA,GAAA,GAAA,GAAA;;AA8BA,SAAS,aAAT,CAAuB,GAAvB,EAAoC,KAApC,EAAiD;AAC/C,SAAO,cAAA,CAAI,KAAK,CAAC,KAAD,CAAT,CAAA,CAAkB,GAAlB,CAAsB,UAAA,GAAA,EAAG;AAAI,WAAA,YAAY,CAAC,GAAD,CAAZ;AAAiB,GAA9C,CAAP;AACD;;AAED,SAAS,YAAT,CAAsB,GAAtB,EAAiC;AAC/B,SAAO,IAAI,CAAC,KAAL,CAAW,IAAI,CAAC,MAAL,KAAgB,IAAI,CAAC,KAAL,CAAW,GAAX,CAA3B,CAAP;AACD","file":"debug_trainer.js","sourceRoot":"../js","sourcesContent":["// @ts-ignore\nimport { Elm } from '../elm/Main.elm'\nimport print from './ports/print'\nimport printAndExitFailure from './ports/printAndExitFailure'\nimport printAndExitSuccess from './ports/printAndExitSuccess'\nimport readFile from './ports/readFile'\nimport writeFile from './ports/writeFile'\nimport exitSuccess from './ports/exitSuccess'\nimport * as SavedData from './savedData'\nimport { devLog } from './utils'\n\nexport function run(): void {\n  const data: string = SavedData.load()\n  devLog('process.argv:', ...process.argv)\n  devLog('data:', data)\n\n  const program = Elm.Main.init({\n    flags: {\n      argv: process.argv,\n      randomNumbers: getRandomInts(1_000_000, 20),\n      dataFilePath: SavedData.dataFilePath,\n      workingDirectory: process.cwd(),\n      data: data,\n      versionMessage: \"6.2.6\"\n    }\n  })\n\n  const portFunctions: ((arg0: any) => any)[] = [\n    print,\n    printAndExitFailure,\n    printAndExitSuccess,\n    // exitSuccess,\n    readFile,\n    writeFile\n  ]\n\n  portFunctions.forEach(function (portSetupFunction) {\n    portSetupFunction(program)\n  })\n}\n\nfunction getRandomInts(max: number, count: number): number[] {\n  return [...Array(count)].map(val => getRandomInt(max))\n}\n\nfunction getRandomInt(max: number): number {\n  return Math.floor(Math.random() * Math.floor(max))\n}"]}